import { useMemo } from "react";
import { useTheme } from "@material-ui/core";
import { createStyles, makeStyles } from "@material-ui/core/styles";
import { Theme } from "@material-ui/core";
import { useAtomicStyles } from "styles";
import { useForm } from "react-hook-form";
import { actions, selectors } from "redux-store";
import * as yup from "yup";
import { yupResolver } from "@hookform/resolvers/yup";

const useStyles = makeStyles((theme: Theme) =>
  createStyles({})
);

const schema = yup.object().shape({
  // name: yup.string().required("Error message")
});

type <%= formName %>Data = {
  // name: string;
};

const use<%= formName %> = () => {
  const theme = useTheme();
  const styles = useStyles(theme);
  const classes = useMemo(() => ({}), []);
  const atomicStyles = useAtomicStyles();
  const { register, handleSubmit, errors } = useForm<<%= formName %>Data>({
    resolver: yupResolver(schema),
  });

  const onSubmit = useMemo(
    () =>
      handleSubmit((formData) => {
        // formData.name;
      }),
    [handleSubmit],
  );

  return {
    styles,
    classes,
    atomicStyles,
    register,
    errors,
    onSubmit,
  };
};

export {use<%= formName %> as default};
